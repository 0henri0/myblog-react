{"ast":null,"code":"import _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _Object$assign from \"@babel/runtime-corejs2/core-js/object/assign\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport axios from 'axios';\nvar DEFAULT_CONFIG = {\n  baseURL: process.env.REACT_APP_URL_API,\n  headers: {\n    'Content-Type': 'application/json',\n    'X-Requested-With': 'XMLHttpRequest'\n  }\n};\nexport var statusCode = {\n  OK: 200,\n  BAD_REQUEST: 400,\n  UNAUTHORIZED: 401,\n  FORBIDDEN: 403,\n  NOT_FOUND: 404,\n  INTERNAL_SERVER_ERROR: 500\n};\n\nvar Http =\n/*#__PURE__*/\nfunction () {\n  function Http() {\n    var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, Http);\n\n    this.config = _Object$assign({}, DEFAULT_CONFIG, config);\n  }\n\n  _createClass(Http, [{\n    key: \"authenticated\",\n    value: function authenticated() {\n      var storedData = localStorage.getItem('access_token'); // get token from localstorage\n\n      if (storedData) {\n        this.config.headers['Authorization'] = 'Bearer ' + storedData;\n      }\n\n      return this;\n    }\n  }, {\n    key: \"get\",\n    value: function get(url, params) {\n      var config = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      return this.executeRequest(url, _objectSpread({}, config, {\n        params: params\n      }));\n    }\n  }, {\n    key: \"post\",\n    value: function post(url, data) {\n      var config = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      return this.executeRequest(url, _objectSpread({\n        method: 'post'\n      }, config, {\n        data: data\n      }));\n    }\n  }, {\n    key: \"patch\",\n    value: function patch(url, data) {\n      var config = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      return this.executeRequest(url, _objectSpread({\n        method: 'patch'\n      }, config, {\n        data: data\n      }));\n    }\n  }, {\n    key: \"put\",\n    value: function put(url, data) {\n      var config = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      return this.executeRequest(url, _objectSpread({\n        method: 'put'\n      }, config, {\n        data: data\n      }));\n    }\n  }, {\n    key: \"delete\",\n    value: function _delete(url, data) {\n      var config = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      return this.executeRequest(url, _objectSpread({\n        method: 'delete'\n      }, config, {\n        data: data\n      }));\n    }\n  }, {\n    key: \"executeRequest\",\n    value: function executeRequest(url, config) {\n      var finalHeaderConfig = _objectSpread({}, this.config.headers, config.headers);\n\n      var finalConfig = _objectSpread({}, this.config, {\n        url: url\n      }, config, {\n        headers: _objectSpread({}, finalHeaderConfig)\n      });\n\n      console.log(finalConfig);\n      return axios.request(finalConfig).then(function (response) {\n        return _Promise.resolve(response);\n      })[\"catch\"](function (error) {\n        if (error.response && error.response.status === statusCode.UNAUTHORIZED) {\n          if (url != 'login') {\n            window.location.href = '/auth/login';\n          }\n        }\n\n        return _Promise.reject(error);\n      });\n    }\n  }]);\n\n  return Http;\n}();\n\nexport { Http as default };","map":{"version":3,"sources":["/media/thai/CC064FEE064FD7DA/React/myblog-react/utils/Http.js"],"names":["axios","DEFAULT_CONFIG","baseURL","process","env","REACT_APP_URL_API","headers","statusCode","OK","BAD_REQUEST","UNAUTHORIZED","FORBIDDEN","NOT_FOUND","INTERNAL_SERVER_ERROR","Http","config","storedData","localStorage","getItem","url","params","executeRequest","data","method","finalHeaderConfig","finalConfig","console","log","request","then","response","resolve","error","status","window","location","href","reject"],"mappings":"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","sourcesContent":["import axios from 'axios';\n\nconst DEFAULT_CONFIG = {\n  baseURL: process.env.REACT_APP_URL_API,\n  headers: {\n    'Content-Type': 'application/json',\n    'X-Requested-With': 'XMLHttpRequest',\n  },\n};\n\nexport const statusCode = {\n  OK: 200,\n  BAD_REQUEST: 400,\n  UNAUTHORIZED: 401,\n  FORBIDDEN: 403,\n  NOT_FOUND: 404,\n  INTERNAL_SERVER_ERROR: 500,\n};\n\nexport default class Http {\n  constructor(config = {}) {\n    this.config = Object.assign({}, DEFAULT_CONFIG, config);\n  }\n\n  authenticated() {\n    const storedData = localStorage.getItem('access_token'); // get token from localstorage\n    if (storedData) {\n      this.config.headers['Authorization'] = 'Bearer ' + storedData;\n    }\n\n    return this;\n  }\n\n  get(url, params, config = {}) {\n    return this.executeRequest(url, { ...config, params });\n  }\n\n  post(url, data, config = {}) {\n    return this.executeRequest(url, { method: 'post', ...config, data });\n  }\n\n  patch(url, data, config = {}) {\n    return this.executeRequest(url, { method: 'patch', ...config, data });\n  }\n\n  put(url, data, config = {}) {\n    return this.executeRequest(url, { method: 'put', ...config, data });\n  }\n\n  delete(url, data, config = {}) {\n    return this.executeRequest(url, { method: 'delete', ...config, data });\n  }\n\n  executeRequest(url, config) {\n    const finalHeaderConfig = { ...this.config.headers, ...config.headers };\n    const finalConfig = { ...this.config, url, ...config, headers: { ...finalHeaderConfig } };\n    console.log(finalConfig);\n    return axios\n      .request(finalConfig)\n      .then(response => {\n        return Promise.resolve(response);\n      })\n      .catch(error => {\n        if (error.response && error.response.status === statusCode.UNAUTHORIZED) {\n          if (url != 'login') {\n            window.location.href = '/auth/login';\n          }\n        }\n        return Promise.reject(error);\n      });\n  }\n}"]},"metadata":{},"sourceType":"module"}