{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport ImageGallary from './imageGallary';\nimport Carousel, { ModalGateway, Modal } from 'react-images';\nconst images = [{\n  src: 'static/img/imagegallary/1.jpg'\n}, {\n  src: 'static/img/imagegallary/2.jpg'\n}, {\n  src: 'static/img/imagegallary/3.jpg'\n}, {\n  src: 'static/img/imagegallary/4.jpg'\n}, {\n  src: 'static/img/imagegallary/5.jpg'\n}, {\n  src: 'static/img/imagegallary/6.jpg'\n}, {\n  src: ' static/img/elements/g1.jpg'\n}, {\n  src: ' static/img/elements/g2.jpg'\n}, {\n  src: ' static/img/elements/g3.jpg'\n}, {\n  src: ' static/img/elements/g4.jpg'\n}, {\n  src: ' static/img/elements/g5.jpg'\n}, {\n  src: ' static/img/elements/g6.jpg'\n}, {\n  src: ' static/img/elements/g7.jpg'\n}, {\n  src: ' static/img/elements/g8.jpg'\n}];\n\nclass ListImageGallary extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"toggleModal\", index => {\n      this.setState({\n        modalIsOpen: !this.state.modalIsOpen,\n        selectedIndex: index\n      });\n    });\n\n    this.state = {\n      modalIsOpen: false,\n      selectedIndex: 0\n    };\n  }\n\n  render() {\n    const {\n      selectedIndex\n    } = this.state;\n    return __jsx(\"div\", {\n      className: \"section-top-border\"\n    }, __jsx(\"h3\", {\n      className: \"title_color\",\n      style: {\n        textAlign: 'center'\n      }\n    }, \"Image Gallery\"), __jsx(\"div\", {\n      className: \"row gallery-item\"\n    }, images.map((image, index) => {\n      return __jsx(ImageGallary, {\n        key: index,\n        src: image.src,\n        onClick: () => this.toggleModal(index)\n      });\n    }), __jsx(ModalGateway, null, this.state.modalIsOpen ? __jsx(Modal, {\n      onClose: this.toggleModal,\n      styles: {\n        blanket: base => _objectSpread({}, base),\n        dialog: base => _objectSpread({}, base, {\n          maxWidth: '100%'\n        })\n      }\n    }, __jsx(Carousel, {\n      views: images,\n      currentIndex: selectedIndex,\n      styles: {\n        headerClose: base => _objectSpread({}, base, {\n          color: '#666',\n          ':hover': {\n            color: '#DE350B'\n          }\n        }),\n        view: base => _objectSpread({}, base, {\n          with: 480,\n          overflow: 'hidden'\n        })\n      }\n    })) : null)));\n  }\n\n}\n\nexport default ListImageGallary;","map":{"version":3,"sources":["/media/thai/CC064FEE064FD7DA/React/myblog-react/components/imagegallary/listImageGallary.js"],"names":["React","ImageGallary","Carousel","ModalGateway","Modal","images","src","ListImageGallary","Component","constructor","props","index","setState","modalIsOpen","state","selectedIndex","render","textAlign","map","image","toggleModal","blanket","base","dialog","maxWidth","headerClose","color","view","with","overflow"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,QAAP,IAAmBC,YAAnB,EAAiCC,KAAjC,QAA8C,cAA9C;AAEA,MAAMC,MAAM,GAAG,CACb;AAAEC,EAAAA,GAAG,EAAE;AAAP,CADa,EAEb;AAAEA,EAAAA,GAAG,EAAE;AAAP,CAFa,EAGb;AAAEA,EAAAA,GAAG,EAAE;AAAP,CAHa,EAIb;AAAEA,EAAAA,GAAG,EAAE;AAAP,CAJa,EAKb;AAAEA,EAAAA,GAAG,EAAE;AAAP,CALa,EAMb;AAAEA,EAAAA,GAAG,EAAE;AAAP,CANa,EAOb;AAAEA,EAAAA,GAAG,EAAE;AAAP,CAPa,EAQb;AAAEA,EAAAA,GAAG,EAAE;AAAP,CARa,EASb;AAAEA,EAAAA,GAAG,EAAE;AAAP,CATa,EAUb;AAAEA,EAAAA,GAAG,EAAE;AAAP,CAVa,EAWb;AAAEA,EAAAA,GAAG,EAAE;AAAP,CAXa,EAYb;AAAEA,EAAAA,GAAG,EAAE;AAAP,CAZa,EAab;AAAEA,EAAAA,GAAG,EAAE;AAAP,CAba,EAcb;AAAEA,EAAAA,GAAG,EAAE;AAAP,CAda,CAAf;;AAiBA,MAAMC,gBAAN,SAA+BP,KAAK,CAACQ,SAArC,CAA+C;AAC7CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,yCAOJC,KAAD,IAAW;AACvB,WAAKC,QAAL,CAAc;AAAEC,QAAAA,WAAW,EAAE,CAAC,KAAKC,KAAL,CAAWD,WAA3B;AAAwCE,QAAAA,aAAa,EAAEJ;AAAvD,OAAd;AACD,KATkB;;AAEjB,SAAKG,KAAL,GAAa;AACXD,MAAAA,WAAW,EAAE,KADF;AAEXE,MAAAA,aAAa,EAAE;AAFJ,KAAb;AAID;;AAIDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAED,MAAAA;AAAF,QAAoB,KAAKD,KAA/B;AACA,WACE;AAAK,MAAA,SAAS,EAAC;AAAf,OACE;AAAI,MAAA,SAAS,EAAC,aAAd;AAA4B,MAAA,KAAK,EAAE;AAAEG,QAAAA,SAAS,EAAE;AAAb;AAAnC,uBADF,EAEE;AAAK,MAAA,SAAS,EAAC;AAAf,OACGZ,MAAM,CAACa,GAAP,CAAW,CAACC,KAAD,EAAQR,KAAR,KAAkB;AAC5B,aAAO,MAAC,YAAD;AAAc,QAAA,GAAG,EAAEA,KAAnB;AAA0B,QAAA,GAAG,EAAEQ,KAAK,CAACb,GAArC;AAA0C,QAAA,OAAO,EAAE,MAAM,KAAKc,WAAL,CAAiBT,KAAjB;AAAzD,QAAP;AACD,KAFA,CADH,EAKE,MAAC,YAAD,QACG,KAAKG,KAAL,CAAWD,WAAX,GACC,MAAC,KAAD;AAAO,MAAA,OAAO,EAAE,KAAKO,WAArB;AACE,MAAA,MAAM,EAAE;AACNC,QAAAA,OAAO,EAAEC,IAAI,sBACRA,IADQ,CADP;AAINC,QAAAA,MAAM,EAAED,IAAI,sBACPA,IADO;AAEVE,UAAAA,QAAQ,EAAE;AAFA;AAJN;AADV,OAUE,MAAC,QAAD;AAAU,MAAA,KAAK,EAAEnB,MAAjB;AACE,MAAA,YAAY,EAAEU,aADhB;AAEE,MAAA,MAAM,EAAE;AAENU,QAAAA,WAAW,EAAEH,IAAI,sBACZA,IADY;AAEfI,UAAAA,KAAK,EAAE,MAFQ;AAGf,oBAAU;AAAEA,YAAAA,KAAK,EAAE;AAAT;AAHK,UAFX;AAONC,QAAAA,IAAI,EAAEL,IAAI,sBACLA,IADK;AAERM,UAAAA,IAAI,EAAE,GAFE;AAGRC,UAAAA,QAAQ,EAAE;AAHF;AAPJ;AAFV,MAVF,CADD,GA2BG,IA5BN,CALF,CAFF,CADF;AAyCD;;AAtD4C;;AAyD/C,eAAetB,gBAAf","sourcesContent":["import React from 'react';\nimport ImageGallary from './imageGallary';\nimport Carousel, { ModalGateway, Modal } from 'react-images';\n\nconst images = [\n  { src: 'static/img/imagegallary/1.jpg' },\n  { src: 'static/img/imagegallary/2.jpg' },\n  { src: 'static/img/imagegallary/3.jpg' },\n  { src: 'static/img/imagegallary/4.jpg' },\n  { src: 'static/img/imagegallary/5.jpg' },\n  { src: 'static/img/imagegallary/6.jpg' },\n  { src: ' static/img/elements/g1.jpg' },\n  { src: ' static/img/elements/g2.jpg' },\n  { src: ' static/img/elements/g3.jpg' },\n  { src: ' static/img/elements/g4.jpg' },\n  { src: ' static/img/elements/g5.jpg' },\n  { src: ' static/img/elements/g6.jpg' },\n  { src: ' static/img/elements/g7.jpg' },\n  { src: ' static/img/elements/g8.jpg' },\n];\n\nclass ListImageGallary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      modalIsOpen: false,\n      selectedIndex: 0\n    };\n  }\n  toggleModal = (index) => {\n    this.setState({ modalIsOpen: !this.state.modalIsOpen, selectedIndex: index });\n  }\n  render() {\n    const { selectedIndex } = this.state;\n    return (\n      <div className=\"section-top-border\">\n        <h3 className=\"title_color\" style={{ textAlign: 'center' }}>Image Gallery</h3>\n        <div className=\"row gallery-item\">\n          {images.map((image, index) => {\n            return <ImageGallary key={index} src={image.src} onClick={() => this.toggleModal(index)} />;\n          })}\n\n          <ModalGateway>\n            {this.state.modalIsOpen ? (\n              <Modal onClose={this.toggleModal}\n                styles={{\n                  blanket: base => ({\n                    ...base,\n                  }),\n                  dialog: base => ({\n                    ...base,\n                    maxWidth: '100%',\n                  }),\n                }}>\n                <Carousel views={images}\n                  currentIndex={selectedIndex}\n                  styles={{\n\n                    headerClose: base => ({\n                      ...base,\n                      color: '#666',\n                      ':hover': { color: '#DE350B' },\n                    }),\n                    view: base => ({\n                      ...base,\n                      with: 480,\n                      overflow: 'hidden',\n                    }),\n                  }} />\n              </Modal>\n            ) : null}\n          </ModalGateway>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ListImageGallary;\n"]},"metadata":{},"sourceType":"module"}