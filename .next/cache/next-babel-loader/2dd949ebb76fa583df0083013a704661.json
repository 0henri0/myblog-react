{"ast":null,"code":"import _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _Object$assign from \"@babel/runtime-corejs2/core-js/object/assign\";\nimport axios from 'axios';\nconst DEFAULT_CONFIG = {\n  baseURL: process.env.REACT_APP_URL_API,\n  headers: {\n    'Content-Type': 'application/json',\n    'X-Requested-With': 'XMLHttpRequest'\n  }\n};\nexport const statusCode = {\n  OK: 200,\n  BAD_REQUEST: 400,\n  UNAUTHORIZED: 401,\n  FORBIDDEN: 403,\n  NOT_FOUND: 404,\n  INTERNAL_SERVER_ERROR: 500\n};\nexport default class Http {\n  constructor(config = {}) {\n    this.config = _Object$assign({}, DEFAULT_CONFIG, config);\n  }\n\n  authenticated() {\n    const storedData = localStorage.getItem('access_token'); // get token from localstorage\n\n    if (storedData) {\n      this.config.headers['Authorization'] = 'Bearer ' + storedData;\n    }\n\n    return this;\n  }\n\n  get(url, params, config = {}) {\n    return this.executeRequest(url, _objectSpread({}, config, {\n      params\n    }));\n  }\n\n  post(url, data, config = {}) {\n    return this.executeRequest(url, _objectSpread({\n      method: 'post'\n    }, config, {\n      data\n    }));\n  }\n\n  patch(url, data, config = {}) {\n    return this.executeRequest(url, _objectSpread({\n      method: 'patch'\n    }, config, {\n      data\n    }));\n  }\n\n  put(url, data, config = {}) {\n    return this.executeRequest(url, _objectSpread({\n      method: 'put'\n    }, config, {\n      data\n    }));\n  }\n\n  delete(url, data, config = {}) {\n    return this.executeRequest(url, _objectSpread({\n      method: 'delete'\n    }, config, {\n      data\n    }));\n  }\n\n  executeRequest(url, config) {\n    const finalHeaderConfig = _objectSpread({}, this.config.headers, config.headers);\n\n    const finalConfig = _objectSpread({}, this.config, {\n      url\n    }, config, {\n      headers: _objectSpread({}, finalHeaderConfig)\n    });\n\n    console.log(finalConfig);\n    return axios.request(finalConfig).then(response => {\n      return _Promise.resolve(response);\n    }).catch(error => {\n      if (error.response && error.response.status === statusCode.UNAUTHORIZED) {\n        if (url != 'login') {\n          window.location.href = '/auth/login';\n        }\n      }\n\n      return _Promise.reject(error);\n    });\n  }\n\n}","map":{"version":3,"sources":["/media/thai/CC064FEE064FD7DA/React/myblog-react/utils/Http.js"],"names":["axios","DEFAULT_CONFIG","baseURL","process","env","REACT_APP_URL_API","headers","statusCode","OK","BAD_REQUEST","UNAUTHORIZED","FORBIDDEN","NOT_FOUND","INTERNAL_SERVER_ERROR","Http","constructor","config","authenticated","storedData","localStorage","getItem","get","url","params","executeRequest","post","data","method","patch","put","delete","finalHeaderConfig","finalConfig","console","log","request","then","response","resolve","catch","error","status","window","location","href","reject"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,cAAc,GAAG;AACrBC,EAAAA,OAAO,EAAEC,OAAO,CAACC,GAAR,CAAYC,iBADA;AAErBC,EAAAA,OAAO,EAAE;AACP,oBAAgB,kBADT;AAEP,wBAAoB;AAFb;AAFY,CAAvB;AAQA,OAAO,MAAMC,UAAU,GAAG;AACxBC,EAAAA,EAAE,EAAE,GADoB;AAExBC,EAAAA,WAAW,EAAE,GAFW;AAGxBC,EAAAA,YAAY,EAAE,GAHU;AAIxBC,EAAAA,SAAS,EAAE,GAJa;AAKxBC,EAAAA,SAAS,EAAE,GALa;AAMxBC,EAAAA,qBAAqB,EAAE;AANC,CAAnB;AASP,eAAe,MAAMC,IAAN,CAAW;AACxBC,EAAAA,WAAW,CAACC,MAAM,GAAG,EAAV,EAAc;AACvB,SAAKA,MAAL,GAAc,eAAc,EAAd,EAAkBf,cAAlB,EAAkCe,MAAlC,CAAd;AACD;;AAEDC,EAAAA,aAAa,GAAG;AACd,UAAMC,UAAU,GAAGC,YAAY,CAACC,OAAb,CAAqB,cAArB,CAAnB,CADc,CAC2C;;AACzD,QAAIF,UAAJ,EAAgB;AACd,WAAKF,MAAL,CAAYV,OAAZ,CAAoB,eAApB,IAAuC,YAAYY,UAAnD;AACD;;AAED,WAAO,IAAP;AACD;;AAEDG,EAAAA,GAAG,CAACC,GAAD,EAAMC,MAAN,EAAcP,MAAM,GAAG,EAAvB,EAA2B;AAC5B,WAAO,KAAKQ,cAAL,CAAoBF,GAApB,oBAA8BN,MAA9B;AAAsCO,MAAAA;AAAtC,OAAP;AACD;;AAEDE,EAAAA,IAAI,CAACH,GAAD,EAAMI,IAAN,EAAYV,MAAM,GAAG,EAArB,EAAyB;AAC3B,WAAO,KAAKQ,cAAL,CAAoBF,GAApB;AAA2BK,MAAAA,MAAM,EAAE;AAAnC,OAA8CX,MAA9C;AAAsDU,MAAAA;AAAtD,OAAP;AACD;;AAEDE,EAAAA,KAAK,CAACN,GAAD,EAAMI,IAAN,EAAYV,MAAM,GAAG,EAArB,EAAyB;AAC5B,WAAO,KAAKQ,cAAL,CAAoBF,GAApB;AAA2BK,MAAAA,MAAM,EAAE;AAAnC,OAA+CX,MAA/C;AAAuDU,MAAAA;AAAvD,OAAP;AACD;;AAEDG,EAAAA,GAAG,CAACP,GAAD,EAAMI,IAAN,EAAYV,MAAM,GAAG,EAArB,EAAyB;AAC1B,WAAO,KAAKQ,cAAL,CAAoBF,GAApB;AAA2BK,MAAAA,MAAM,EAAE;AAAnC,OAA6CX,MAA7C;AAAqDU,MAAAA;AAArD,OAAP;AACD;;AAEDI,EAAAA,MAAM,CAACR,GAAD,EAAMI,IAAN,EAAYV,MAAM,GAAG,EAArB,EAAyB;AAC7B,WAAO,KAAKQ,cAAL,CAAoBF,GAApB;AAA2BK,MAAAA,MAAM,EAAE;AAAnC,OAAgDX,MAAhD;AAAwDU,MAAAA;AAAxD,OAAP;AACD;;AAEDF,EAAAA,cAAc,CAACF,GAAD,EAAMN,MAAN,EAAc;AAC1B,UAAMe,iBAAiB,qBAAQ,KAAKf,MAAL,CAAYV,OAApB,EAAgCU,MAAM,CAACV,OAAvC,CAAvB;;AACA,UAAM0B,WAAW,qBAAQ,KAAKhB,MAAb;AAAqBM,MAAAA;AAArB,OAA6BN,MAA7B;AAAqCV,MAAAA,OAAO,oBAAOyB,iBAAP;AAA5C,MAAjB;;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAYF,WAAZ;AACA,WAAOhC,KAAK,CACTmC,OADI,CACIH,WADJ,EAEJI,IAFI,CAECC,QAAQ,IAAI;AAChB,aAAO,SAAQC,OAAR,CAAgBD,QAAhB,CAAP;AACD,KAJI,EAKJE,KALI,CAKEC,KAAK,IAAI;AACd,UAAIA,KAAK,CAACH,QAAN,IAAkBG,KAAK,CAACH,QAAN,CAAeI,MAAf,KAA0BlC,UAAU,CAACG,YAA3D,EAAyE;AACvE,YAAIY,GAAG,IAAI,OAAX,EAAoB;AAClBoB,UAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuB,aAAvB;AACD;AACF;;AACD,aAAO,SAAQC,MAAR,CAAeL,KAAf,CAAP;AACD,KAZI,CAAP;AAaD;;AAnDuB","sourcesContent":["import axios from 'axios';\n\nconst DEFAULT_CONFIG = {\n  baseURL: process.env.REACT_APP_URL_API,\n  headers: {\n    'Content-Type': 'application/json',\n    'X-Requested-With': 'XMLHttpRequest',\n  },\n};\n\nexport const statusCode = {\n  OK: 200,\n  BAD_REQUEST: 400,\n  UNAUTHORIZED: 401,\n  FORBIDDEN: 403,\n  NOT_FOUND: 404,\n  INTERNAL_SERVER_ERROR: 500,\n};\n\nexport default class Http {\n  constructor(config = {}) {\n    this.config = Object.assign({}, DEFAULT_CONFIG, config);\n  }\n\n  authenticated() {\n    const storedData = localStorage.getItem('access_token'); // get token from localstorage\n    if (storedData) {\n      this.config.headers['Authorization'] = 'Bearer ' + storedData;\n    }\n\n    return this;\n  }\n\n  get(url, params, config = {}) {\n    return this.executeRequest(url, { ...config, params });\n  }\n\n  post(url, data, config = {}) {\n    return this.executeRequest(url, { method: 'post', ...config, data });\n  }\n\n  patch(url, data, config = {}) {\n    return this.executeRequest(url, { method: 'patch', ...config, data });\n  }\n\n  put(url, data, config = {}) {\n    return this.executeRequest(url, { method: 'put', ...config, data });\n  }\n\n  delete(url, data, config = {}) {\n    return this.executeRequest(url, { method: 'delete', ...config, data });\n  }\n\n  executeRequest(url, config) {\n    const finalHeaderConfig = { ...this.config.headers, ...config.headers };\n    const finalConfig = { ...this.config, url, ...config, headers: { ...finalHeaderConfig } };\n    console.log(finalConfig);\n    return axios\n      .request(finalConfig)\n      .then(response => {\n        return Promise.resolve(response);\n      })\n      .catch(error => {\n        if (error.response && error.response.status === statusCode.UNAUTHORIZED) {\n          if (url != 'login') {\n            window.location.href = '/auth/login';\n          }\n        }\n        return Promise.reject(error);\n      });\n  }\n}"]},"metadata":{},"sourceType":"module"}