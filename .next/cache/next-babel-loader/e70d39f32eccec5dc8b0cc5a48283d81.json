{"ast":null,"code":"import _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _Object$assign from \"@babel/runtime-corejs2/core-js/object/assign\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport axios from 'axios';\nvar DEFAULT_CONFIG = {\n  baseURL: process.env.REACT_APP_URL_API,\n  headers: {\n    'Content-Type': 'application/json',\n    'X-Requested-With': 'XMLHttpRequest'\n  }\n};\nexport var statusCode = {\n  OK: 200,\n  BAD_REQUEST: 400,\n  UNAUTHORIZED: 401,\n  FORBIDDEN: 403,\n  NOT_FOUND: 404,\n  INTERNAL_SERVER_ERROR: 500\n};\n\nvar Http =\n/*#__PURE__*/\nfunction () {\n  function Http() {\n    var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, Http);\n\n    this.config = _Object$assign({}, DEFAULT_CONFIG, config);\n  }\n\n  _createClass(Http, [{\n    key: \"authenticated\",\n    value: function authenticated() {\n      var storedData = localStorage.getItem('access_token'); // get token from localstorage\n\n      if (storedData) {\n        this.config.headers['Authorization'] = 'Bearer ' + storedData;\n      }\n\n      return this;\n    }\n  }, {\n    key: \"get\",\n    value: function get(url, params) {\n      var config = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      return this.executeRequest(url, _objectSpread({}, config, {\n        params: params\n      }));\n    }\n  }, {\n    key: \"post\",\n    value: function post(url, data) {\n      var config = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      return this.executeRequest(url, _objectSpread({\n        method: 'post'\n      }, config, {\n        data: data\n      }));\n    }\n  }, {\n    key: \"patch\",\n    value: function patch(url, data) {\n      var config = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      return this.executeRequest(url, _objectSpread({\n        method: 'patch'\n      }, config, {\n        data: data\n      }));\n    }\n  }, {\n    key: \"put\",\n    value: function put(url, data) {\n      var config = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      return this.executeRequest(url, _objectSpread({\n        method: 'put'\n      }, config, {\n        data: data\n      }));\n    }\n  }, {\n    key: \"delete\",\n    value: function _delete(url, data) {\n      var config = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      return this.executeRequest(url, _objectSpread({\n        method: 'delete'\n      }, config, {\n        data: data\n      }));\n    }\n  }, {\n    key: \"executeRequest\",\n    value: function executeRequest(url, config) {\n      var finalHeaderConfig = _objectSpread({}, this.config.headers, config.headers);\n\n      var finalConfig = _objectSpread({}, this.config, {\n        url: url\n      }, config, {\n        headers: _objectSpread({}, finalHeaderConfig)\n      });\n\n      console.log(finalConfig);\n      return axios.request(finalConfig).then(function (response) {\n        return _Promise.resolve(response);\n      })[\"catch\"](function (error) {\n        if (error.response && error.response.status === statusCode.UNAUTHORIZED) {\n          if (url != 'login') {\n            window.location.href = '/login';\n          }\n        }\n\n        return _Promise.reject(error);\n      });\n    }\n  }]);\n\n  return Http;\n}();\n\nexport { Http as default };","map":null,"metadata":{},"sourceType":"module"}